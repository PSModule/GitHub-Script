name: Action-Test-Prerelease

run-name: "Action-Test - [${{ github.event.pull_request.title }} #${{ github.event.pull_request.number }}] by @${{ github.actor }}"

on:
  workflow_dispatch:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  # ActionTest:
  #   uses: ./.github/workflows/TestWorkflow.yml
  #   secrets: inherit
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   with:
  #     runs-on: ${{ matrix.os }}
  #     Prerelease: true
  ActionTestCommands:
    name: Commands + Outputs
    runs-on: ubuntu-latest
    outputs:
      MatrixTest: ${{ fromJson(steps.test.outputs.result).MatrixTest }}
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        id: test
        with:
          Debug: true
          Verbose: true
          Prerelease: true
          ShowInit: true
          ShowOutput: true
          Script: |
            LogGroup 'MatrixTest' {
              $matrixTest = @{
                Path   = 'test'
                include = @(
                  @{
                    Name   = 'Test'
                    RunsOn = 'ubuntu-latest'
                  },
                  @{
                    Name   = 'Test2'
                    RunsOn = 'windows-latest'
                  },
                  @{
                    Name   = 'Test3'
                    RunsOn = 'macos-latest'
                  }
                )
              }
              Set-GitHubOutput -Name 'MatrixTest' -Value $matrixTest
            }

  MatrixTest:
    needs: ActionTestCommands
    strategy:
      matrix:
        config: ${{ fromJson(needs.ActionTestCommands.outputs.MatrixTest) }}
    name: Matrix Test [${{ matrix.Name }}]
    runs-on: ${{ matrix.RunsOn }}
    steps:
      - name: Matrix Test
        shell: pwsh
        env:
          MatrixTest: ${{ matrix.Cars }}
        run: |
          $matrixTest = $env:MatrixTest | ConvertFrom-Json
          $matrixTest | Format-List
