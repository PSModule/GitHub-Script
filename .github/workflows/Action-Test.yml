name: Action-Test

run-name: "Action-Test - [${{ github.event.pull_request.title }} #${{ github.event.pull_request.number }}] by @${{ github.actor }}"

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  # ActionTest:
  #   uses: ./.github/workflows/TestWorkflow.yml
  #   secrets: inherit
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       os: [ubuntu-latest, macos-latest, windows-latest]
  #   with:
  #     runs-on: ${{ matrix.os }}

  ActionTest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Debug: true
          Script: |
            $scopes = 'local', 'global', 'system'
            $scopes | ForEach-Object {
              LogGroup "GitConfig - $_" {
                $Scope = $_
                $configList = git config --$Scope --list 2>&1
                if ($LASTEXITCODE -ne 0) {
                  $global:LASTEXITCODE = 0
                  $configList = $null
                } else {
                  $config = @()
                  $configList = $configList | Sort-Object
                  $configList | ForEach-Object {
                    $name, $value = $_ -split '=', 2
                    Write-Debug "Name:  $name"
                    Write-Debug "Value: $value"
                    if ($value -match '(?i)AUTHORIZATION:\s*(?<scheme>[^\s]+)\s+(?<token>.*)') {
                      Add-GitHubMask -Value $matches['token']
                    }
                    $config += @{
                      ($name.Trim()) = ($value.Trim())
                    }
                  }
                  $config | Format-Table -Property * -AutoSize
                }
              }
            }
