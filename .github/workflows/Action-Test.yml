name: Action-Test

run-name: "Action-Test - [${{ github.event.pull_request.title }} #${{ github.event.pull_request.number }}] by @${{ github.actor }}"

on:
  workflow_dispatch:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: read

jobs:
  ActionTestBasic:
    name: Action-Test - [Basic]
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Debug: true
          Verbose: true

  ActionTestWithScript:
    name: Action-Test - [WithScript]
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Debug: true
          Verbose: true
          Script: |
            LogGroup 'Get-GitHubZen' {
              Get-GitHubZen
            }

            LogGroup 'Get-GitHubViewer' {
              Get-GitHubViewer -Fields name, login, id, databaseID
            }

  ActionTestCommands:
    name: Action-Test - [Commands]
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        id: test
        with:
          Debug: true
          Verbose: true
          Prerelease: true
          ShowOutput: true
          Script: |
            $cat = Get-GitHubOctocat
            $zen = Get-GitHubZen
            Set-GitHubEnvironmentVariable -Name 'OCTOCAT' -Value $cat
            Set-GitHubOutput -Name 'WISECAT' -Value $cat
            Set-GitHubOutput -Name 'Zen' -Value $zen

      - name: Run-test
        shell: pwsh
        env:
          result: ${{ steps.test.outputs.result }}
          WISECAT: ${{ fromJson(steps.test.outputs.result).WISECAT }}
        run: |
          $result = $env:result | ConvertFrom-Json
          Set-GitHubStepSummary -Summary $env:WISECAT
          Write-GitHubNotice -Message $result.Zen -Title 'GitHub Zen'

  ActionTestWithoutToken:
    name: Action-Test - [WithoutToken]
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Token: ''
          Script: |
            LogGroup 'My group' {
              'This is a group'
            }

  ActionTestWithPAT:
    name: Action-Test - [WithPAT]
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Token: ${{ secrets.TEST_USER_PAT }}
          Script: |
            LogGroup 'Get-GitHubUser' {
              Get-GitHubUser | Format-Table -AutoSize
            }

  ActionTestWithFGPAT:
    strategy:
      matrix:
        include:
          - name: Action-Test - [WithUserFGPAT]
            Token: TEST_USER_USER_FG_PAT
          - name: Action-Test - [WithOrgFGPAT]
            Token: TEST_USER_ORG_FG_PAT
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          Token: ${{ secrets[matrix.Token] }}
          Script: |
            LogGroup 'Get-GitHubUser' {
              Get-GitHubUser | Format-Table -AutoSize
            }

  ActionTestWithGitHubApp:
    strategy:
      matrix:
        include:
          - name: Action-Test - [GitHubAppEnt]
            clientID: TEST_APP_ENT_CLIENT_ID
            privateKey: TEST_APP_ENT_PRIVATE_KEY
          - name: Action-Test - [GitHubAppOrg]
            clientID: TEST_APP_ORG_CLIENT_ID
            privateKey: TEST_APP_ORG_PRIVATE_KEY
    name: ${{ matrix.name }}
    runs-on: ubuntu-latest
    steps:
      # Need to check out as part of the test, as its a local action
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Action-Test
        uses: ./
        with:
          ClientID: ${{ secrets[matrix.clientID] }}
          PrivateKey: ${{ secrets[matrix.privateKey] }}
          Script: |
            LogGroup 'Get-GitHubApp' {
              Get-GitHubApp | Format-Table -AutoSize
            }

            LogGroup 'Get-GitHubAppInstallation' {
              Get-GitHubAppInstallation | Format-Table -AutoSize
            }

            LogGroup 'Do something as an installation' {
              Get-GithubAppInstallation | New-GitHubAppInstallationAccessToken | ForEach-Object {
                Connect-GitHub -Token $_.token -Silent
                Get-GitHubContext | Format-Table -AutoSize
                Get-GitHubGitConfig | Format-Table -AutoSize
              }
            }
